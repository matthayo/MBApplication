{"version":3,"sources":["user/user-edit.component.ts"],"names":["UserEditComponent","formBuilder","router","authService","this","title","userForm","errorMessage","isLoggedIn","navigate","prototype","ngOnInit","group","username","forms_1","Validators","required","pattern","email","password","minLength","passwordConfirm","displayName","validator","compareValidator","formControl_1","formControl_2","formGroup","controls","value","compareFailed","onSubmit","_this","add","subscribe","data","error","login","err","console","log","__decorate","core_1","Component","selector","templateUrl","FormBuilder","router_1","Router","auth_service_1","AuthService"],"mappings":"giCAqBI,SAAAA,kBACgBC,YACAC,OACAC,aAFAC,KAAAH,YAAAA,YACAG,KAAAF,OAAAA,OACAE,KAAAD,YAAAA,YAPhBC,KAAAC,MAAQ,wBACRD,KAAAE,SAAsB,KACtBF,KAAAG,aAAe,KAMRH,KAAKD,YAAYK,cAChBJ,KAAKF,OAAOO,UAAU,KAwElC,OApEIT,kBAAAU,UAAAC,SAAA,WACIP,KAAKE,SAAWF,KAAKH,YAAYW,OAC7BC,UAAW,IACPC,QAAAC,WAAWC,SACXF,QAAAC,WAAWE,QAAQ,kBAEvBC,OAAQ,IACJJ,QAAAC,WAAWC,SACXF,QAAAC,WAAWE,QAAQ,yIAEvBE,UAAW,IACPL,QAAAC,WAAWC,SACXF,QAAAC,WAAWK,UAAU,KAEzBC,iBAAkB,IACdP,QAAAC,WAAWC,SACXF,QAAAC,WAAWK,UAAU,KAEzBE,aAAc,GAAI,QAGlBC,UAAWnB,KAAKoB,iBAAiB,WAAY,sBAIrDxB,kBAAAU,UAAAc,iBAAA,SAAiBC,cAAuBC,eACpC,OAAO,SAACC,WACJ,IAAIR,SAAWQ,UAAUC,SAASH,eAC9BJ,gBAAkBM,UAAUC,SAASF,eAEzC,OAAGP,SAASU,QAAUR,gBAAgBQ,MAC3B,MAEFC,eAAe,KAIhC9B,kBAAAU,UAAAqB,SAAA,WAAA,IAAAC,MAAA5B,KACIA,KAAKD,YAAY8B,IAAI7B,KAAKE,SAASuB,OAC9BK,UAAU,SAACC,MACS,MAAdA,KAAKC,OAEJJ,MAAKzB,aAAe,KACpByB,MAAK7B,YAAYkC,MACbL,MAAK1B,SAASuB,MAAMhB,SACpBmB,MAAK1B,SAASuB,MAAMV,UAAUe,UAAU,SAACC,MAErCH,MAAKzB,aAAe,KACpByB,MAAK9B,OAAOO,UAAU,MAE1B,SAAC6B,KACGC,QAAQC,IAAIF,KAEZN,MAAKzB,aAAe,4CAM5ByB,MAAKzB,aAAe4B,KAAKC,OAGjC,SAACE,KAEGN,MAAKzB,aAAe+B,OA9EvBtC,kBAAiByC,YAP7BC,OAAAC,WACGC,SAAU,YACVC,YAAa,sEAWgB/B,QAAAgC,YACLC,SAAAC,OACKC,eAAAC,eARpBlD","file":"user-edit.component.js","sourcesContent":["//imports\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../auth.service\";\r\nimport { User } from \"../user/user\";\r\n\r\n\r\n//Decorators\r\n@Component({\r\n    selector: \"user-edit\",\r\n    templateUrl: \"app/user/user-edit.component.html\"\r\n})\r\n\r\n\r\n//Exports\r\nexport class UserEditComponent {\r\n    title = \"New User Registration\";\r\n    userForm: FormGroup = null;\r\n    errorMessage = null;\r\n\r\n    constructor(\r\n            private formBuilder: FormBuilder,\r\n            private router: Router,\r\n            private authService: AuthService) { \r\n        if(this.authService.isLoggedIn()){\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n    \r\n    ngOnInit(){\r\n        this.userForm = this.formBuilder.group({\r\n            username: [\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"[a-zA-Z0-9]+\")\r\n                ]],\r\n            email: [\"\", [\r\n                Validators.required,\r\n                Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")\r\n                ]],\r\n            password: [\"\", [\r\n                Validators.required,\r\n                Validators.minLength(6)\r\n                ]],\r\n            passwordConfirm: [\"\", [\r\n                Validators.required,\r\n                Validators.minLength(6)\r\n                ]],\r\n            displayName: [\"\", null] \r\n        },\r\n        {\r\n            validator: this.compareValidator('password', 'passwordConfirm')\r\n        });\r\n    }\r\n\r\n    compareValidator(formControl_1: string, formControl_2: string){\r\n        return (formGroup: FormGroup): {[key: string]: any} => {\r\n            let password = formGroup.controls[formControl_1];\r\n            let passwordConfirm = formGroup.controls[formControl_2];\r\n\r\n            if(password.value === passwordConfirm.value){\r\n                return null;\r\n            }\r\n            return { compareFailed: true}\r\n        }\r\n    }\r\n\r\n    onSubmit(){\r\n        this.authService.add(this.userForm.value)\r\n            .subscribe((data) => {\r\n                if(data.error == null){\r\n                    //registration successful\r\n                    this.errorMessage = null;\r\n                    this.authService.login(\r\n                        this.userForm.value.username,\r\n                        this.userForm.value.password).subscribe((data) => {\r\n                            //login successful\r\n                            this.errorMessage = null;\r\n                            this.router.navigate([\"\"]);\r\n                        }, \r\n                        (err) => {\r\n                            console.log(err);\r\n                            //login failure\r\n                            this.errorMessage = \"Warning: Username or Password mismatch\";\r\n                        }\r\n                    );\r\n                }\r\n                else{\r\n                    //registration failure\r\n                    this.errorMessage = data.error;\r\n                }\r\n            },\r\n            (err) => {\r\n                //server/connection error\r\n                this.errorMessage = err;\r\n            }\r\n        );\r\n    }\r\n}"]}