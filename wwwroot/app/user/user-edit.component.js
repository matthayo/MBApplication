System.register(["@angular/core","@angular/forms","@angular/router","../auth.service"],function(exports_1,context_1){"use strict";var core_1,forms_1,router_1,auth_service_1,UserEditComponent,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};context_1&&context_1.id;return{setters:[function(core_1_1){core_1=core_1_1},function(forms_1_1){forms_1=forms_1_1},function(router_1_1){router_1=router_1_1},function(auth_service_1_1){auth_service_1=auth_service_1_1}],execute:function(){UserEditComponent=function(){function UserEditComponent(formBuilder,router,authService){this.formBuilder=formBuilder,this.router=router,this.authService=authService,this.title="New User Registration",this.userForm=null,this.errorMessage=null,this.authService.isLoggedIn()&&this.router.navigate([""])}return UserEditComponent.prototype.ngOnInit=function(){this.userForm=this.formBuilder.group({username:["",[forms_1.Validators.required,forms_1.Validators.pattern("[a-zA-Z0-9]+")]],email:["",[forms_1.Validators.required,forms_1.Validators.pattern("[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?")]],password:["",[forms_1.Validators.required,forms_1.Validators.minLength(6)]],passwordConfirm:["",[forms_1.Validators.required,forms_1.Validators.minLength(6)]],displayName:["",null]},{validator:this.compareValidator("password","passwordConfirm")})},UserEditComponent.prototype.compareValidator=function(formControl_1,formControl_2){return function(formGroup){var password=formGroup.controls[formControl_1],passwordConfirm=formGroup.controls[formControl_2];return password.value===passwordConfirm.value?null:{compareFailed:!0}}},UserEditComponent.prototype.onSubmit=function(){var _this=this;this.authService.add(this.userForm.value).subscribe(function(data){null==data.error?(_this.errorMessage=null,_this.authService.login(_this.userForm.value.username,_this.userForm.value.password).subscribe(function(data){_this.errorMessage=null,_this.router.navigate([""])},function(err){console.log(err),_this.errorMessage="Warning: Username or Password mismatch"})):_this.errorMessage=data.error},function(err){_this.errorMessage=err})},UserEditComponent=__decorate([core_1.Component({selector:"user-edit",templateUrl:"app/user/user-edit.component.html"}),__metadata("design:paramtypes",[forms_1.FormBuilder,router_1.Router,auth_service_1.AuthService])],UserEditComponent)}(),exports_1("UserEditComponent",UserEditComponent)}}});
//# sourceMappingURL=user-edit.component.js.map
