{"version":3,"sources":["family/family.service.ts"],"names":["FamilyService","http","this","baseUrl","prototype","get","num","url","map","response","json","catch","handleError","getByName","name","getFamilies","add","family","post","JSON","stringify","getRequestOptions","update","Id","put","delete","id","http_1","RequestOptions","headers","Headers","Content-Type","error","console","Observable_1","Observable","throw","__decorate","core_1","Injectable","Http"],"mappings":"s8BAeI,SAAAA,cAAoBC,MAAAC,KAAAD,KAAAA,KAFpBC,KAAAC,QAAU,gBAoFd,OA7EIH,cAAAI,UAAAC,IAAA,SAAIC,KACA,IAAIC,IAAML,KAAKC,QAAU,OAIzB,OAFU,MAAPG,MAAaC,KAAOD,KAEhBJ,KAAKD,KAAKI,IAAIE,KAChBC,IAAI,SAAAC,UAAY,OAAAA,SAASC,SACzBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAS,UAAA,SAAUC,MACN,IAAIP,IAAML,KAAKC,QAAU,aAEzB,OAAW,MAARW,KAEQZ,KAAKD,KAAKI,IAAIE,KAChBC,IAAI,SAAAC,UAAY,OAAAA,SAASC,SACzBC,MAAMT,KAAKU,aAGTV,KAAKa,eAIpBf,cAAAI,UAAAW,YAAA,SAAYT,KACR,IAAIC,IAAML,KAAKC,QAAU,eAIzB,OAFU,MAAPG,MAAaC,KAAOD,KAEhBJ,KAAKD,KAAKI,IAAIE,KACZC,IAAI,SAAAC,UAAY,OAAAA,SAASC,SACzBC,MAAMT,KAAKU,cAIxBZ,cAAAI,UAAAY,IAAA,SAAIC,QACA,IAAIV,IAAML,KAAKC,QAEf,OAAOD,KAAKD,KAAKiB,KAAKX,IAAKY,KAAKC,UAAUH,QAASf,KAAKmB,qBACnDb,IAAI,SAAAC,UAAY,OAAAA,SAASC,SACzBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAkB,OAAA,SAAOL,QACH,IAAIV,IAAML,KAAKC,QAAUc,OAAOM,GAEhC,OAAOrB,KAAKD,KAAKuB,IAAIjB,IAAKY,KAAKC,UAAUH,QAASf,KAAKmB,qBAClDb,IAAI,SAAAC,UAAY,OAAAA,SAASC,SACzBC,MAAMT,KAAKU,cAIpBZ,cAAAI,UAAAqB,OAAA,SAAOC,IACH,IAAInB,IAAML,KAAKC,QAAUuB,GAEzB,OAAOxB,KAAKD,KAAKwB,OAAOlB,KACnBI,MAAMT,KAAKU,cAMZZ,cAAAI,UAAAiB,kBAAR,WACI,OAAO,IAAIM,OAAAC,gBACPC,QAAS,IAAIF,OAAAG,SACTC,eAAgB,wBAMpB/B,cAAAI,UAAAQ,YAAR,SAAoBoB,OAEhB,OADAC,QAAQD,MAAMA,OACPE,aAAAC,WAAWC,MAAMJ,MAAMtB,OAAOsB,OAAS,iBApFzChC,cAAaqC,YAHzBC,OAAAC,6CAO6BZ,OAAAa,QAJjBxC","file":"family.service.js","sourcesContent":["//imports\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { AuthService } from \"../auth.service\";\r\nimport { Family } from \"./family\";\r\n\r\n//Decorator\r\n@Injectable()\r\n\r\n//Export\r\nexport class FamilyService {\r\n    \r\n    baseUrl = \"api/families/\"; //Web API URL\r\n\r\n    constructor(private http: Http) {\r\n        \r\n    }\r\n\r\n    //GET call for /api/families/get/{id}\r\n    get(num?: number){\r\n        var url = this.baseUrl + \"Get/\";\r\n\r\n        if(num != null) url += num;\r\n\r\n        return this.http.get(url)\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //GET call for /api/families/GetByName/{name}\r\n    getByName(name?: string){\r\n        var url = this.baseUrl + \"GetByName/\";\r\n\r\n        if(name != null){\r\n            url + name;\r\n            return this.http.get(url)\r\n                .map(response => response.json())\r\n                .catch(this.handleError);\r\n        }\r\n        else\r\n            return this.getFamilies();\r\n    }\r\n\r\n    //GET call for /api/families/getfamilies\r\n    getFamilies(num?: number){\r\n        var url = this.baseUrl + \"GetFamilies/\"\r\n        \r\n        if(num != null) url += num;\r\n\r\n        return this.http.get(url)\r\n                .map(response => response.json())\r\n                .catch(this.handleError);\r\n    }\r\n\r\n    //POST call for /api/families/\r\n    add(family: Family){\r\n        var url = this.baseUrl;\r\n\r\n        return this.http.post(url, JSON.stringify(family), this.getRequestOptions())\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //PUT call for /api/families/{id}\r\n    update(family: Family){\r\n        var url = this.baseUrl + family.Id;\r\n\r\n        return this.http.put(url, JSON.stringify(family), this.getRequestOptions())\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //DELETE call for /api/families/{id}\r\n    delete(id: number){\r\n        var url = this.baseUrl + id;\r\n\r\n        return this.http.delete(url)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //Helper Methods\r\n    \r\n    //returns a viable RequestOptions object to handle Json requests.\r\n    private getRequestOptions() {\r\n        return new RequestOptions({\r\n            headers: new Headers ({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n    }\r\n\r\n    //handle errors.\r\n    private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || \"Server error\");\r\n    }\r\n}\r\n"]}