{"version":3,"sources":["member/member-detail-edit.component.ts"],"names":["MemberDetailEditComponent","memberService","router","activatedRoute","this","title","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","member","console","log","member_1","Member","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onMemberDetailView","backToMembersList","onBack","__decorate","core_1","Component","selector","templateUrl","member_service_1","MemberService","router_1","Router","ActivatedRoute"],"mappings":"ujCAmBI,SAAAA,0BAAoBC,cACAC,OACAC,gBAFAC,KAAAH,cAAAA,cACAG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eALpBC,KAAAC,MAAQ,yBAgFZ,OAxEIL,0BAAAM,UAAAC,SAAA,WAAA,IAAAC,MAAAJ,KACQK,IAAML,KAAKD,eAAeO,SAASC,OAAW,GAC9CF,GACAL,KAAKH,cAAcW,IAAIH,IAAII,UACvB,SAAAC,QAAU,OAAAN,MAAKM,OAASA,SAGhB,IAAPL,IACLM,QAAQC,IAAI,wCACZZ,KAAKU,OAAS,IAAIG,SAAAC,OAAO,EACD,KACA,iBACA,KACA,KACA,KACA,KACA,KACA,KACA,QAIxBH,QAAQC,IAAI,oCACZZ,KAAKF,OAAOiB,UAAU,cAI9BnB,0BAAAM,UAAAc,SAAA,SAASN,QAAT,IAAAN,MAAAJ,KACIA,KAAKH,cAAcoB,IAAIP,QAAQD,UAC3B,SAACS,MACGd,MAAKM,OAASQ,KACdP,QAAQC,IAAI,UAAYF,OAAOS,GAAK,mBACpCf,MAAKN,OAAOiB,UAAU,cAAeX,MAAKM,OAAOS,MAErD,SAACC,OAAU,OAAAT,QAAQC,IAAIQ,UAI/BxB,0BAAAM,UAAAmB,SAAA,SAASX,QAAT,IAAAN,MAAAJ,KACIA,KAAKH,cAAcyB,OAAOZ,QAAQD,UAC9B,SAACS,MACGd,MAAKM,OAASQ,KACdP,QAAQC,IAAI,UAAYF,OAAOS,GAAK,sBACpCf,MAAKN,OAAOiB,UAAU,cAAeL,OAAOS,MAEhD,SAACC,OAAU,OAAAT,QAAQC,IAAIQ,UAI/BxB,0BAAAM,UAAAqB,SAAA,SAASlB,IAAT,IAAAD,MAAAJ,KACQK,GAAKL,KAAKU,OAAOS,GACrBnB,KAAKH,cAAc2B,OAAOnB,IAAII,UAC1B,SAACS,MACGP,QAAQC,IAAI,UAAYP,GAAK,sBAC7BD,MAAKN,OAAOiB,UAAU,aAE1B,SAACK,OAAU,OAAAT,QAAQC,IAAIQ,UAI/BxB,0BAAAM,UAAAuB,mBAAA,SAAmBf,QAEf,OADAV,KAAKF,OAAOiB,UAAU,cAAeL,OAAOS,MACrC,GAGXvB,0BAAAM,UAAAwB,kBAAA,WACI1B,KAAKF,OAAOiB,UAAU,aAG1BnB,0BAAAM,UAAAyB,OAAA,WACI3B,KAAKF,OAAOiB,UAAU,MA/EjBnB,0BAAyBgC,YANrCC,OAAAC,WACGC,SAAU,qBACVC,YAAa,iFAQsBC,iBAAAC,cACPC,SAAAC,OACQD,SAAAE,kBAN3BzC","file":"member-detail-edit.component.js","sourcesContent":["//Imports\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { Member } from \"./member\";\r\nimport { MemberService } from \"./member.service\";\r\n\r\n//Decorators\r\n@Component({\r\n    selector: \"member-detail-edit\",\r\n    templateUrl: `app/member/member-detail-edit.component.html`\r\n})\r\n\r\n//Export\r\nexport class MemberDetailEditComponent {\r\n    title = \"Editing member details\"\r\n    member: Member;\r\n\r\n    constructor(private memberService: MemberService,\r\n                private router: Router,\r\n                private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id) {\r\n            this.memberService.get(id).subscribe(\r\n                member => this.member = member\r\n            );\r\n        }\r\n        else if (id === 0) {\r\n            console.log(\"Id is 0: adding a new member unit...\");\r\n            this.member = new Member(0, //Id\r\n                                    null, // FamilyId\r\n                                    \"Add New Member\", // FirstName\r\n                                    null, // MiddleName\r\n                                    null, // LastName\r\n                                    null, // Email\r\n                                    null, // Telephone\r\n                                    null, // Gender\r\n                                    null, // MaritalStatus\r\n                                    null  // DateOfBirth     \r\n            );\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home\");\r\n            this.router.navigate([\"members\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(member: Member) {\r\n        this.memberService.add(member).subscribe(\r\n            (data) => {\r\n                this.member = data;\r\n                console.log(\"member \" + member.Id + \" has been added\")\r\n                this.router.navigate([\"member/view\", this.member.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(member: Member) {\r\n        this.memberService.update(member).subscribe(\r\n            (data) => {\r\n                this.member = data;\r\n                console.log(\"member \" + member.Id + \" has been updated.\");\r\n                this.router.navigate([\"member/view\", member.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(id: number) {\r\n        var id = this.member.Id;\r\n        this.memberService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"member \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"members\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onMemberDetailView(member: Member) {\r\n        this.router.navigate([\"member/view\", member.Id]);\r\n        return false;\r\n    }\r\n    \r\n    backToMembersList() {\r\n        this.router.navigate([\"members\"]);\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n}"]}